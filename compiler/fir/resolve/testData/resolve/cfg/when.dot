digraph when_kt {
subgraph test_1 {
  0 [shape=box label="Enter function test_1"];
  1 [shape=box label="Enter block"];
  2 [shape=box label="Enter when"];
  3 [shape=box label="Enter when branch condition "];
  4 [shape=box label="Access variable R|<local>/x|"];
  5 [shape=box label="Const: Int(1)"];
  6 [shape=box label="Operator =="];
  7 [shape=box label="Exit when branch condition"];
  8 [shape=box label="Enter block"];
  9 [shape=box label="Const: Int(10)"];
  10 [shape=box label="Exit block"];
  11 [shape=box label="Exit when branch result"];
  12 [shape=box label="Enter when branch condition "];
  13 [shape=box label="Access variable R|<local>/x|"];
  14 [shape=box label="Const: Int(2)"];
  15 [shape=box label="Function call: R|<local>/x|.R|kotlin/Int.rem|(Int(2))"];
  16 [shape=box label="Const: Int(0)"];
  17 [shape=box label="Operator =="];
  18 [shape=box label="Exit when branch condition"];
  19 [shape=box label="Enter block"];
  20 [shape=box label="Const: Int(20)"];
  21 [shape=box label="Exit block"];
  22 [shape=box label="Exit when branch result"];
  23 [shape=box label="Enter when branch condition "];
  24 [shape=box label="Const: Int(1)"];
  25 [shape=box label="Const: Int(1)"];
  26 [shape=box label="Function call: Int(1).R|kotlin/Int.minus|(Int(1))"];
  27 [shape=box label="Const: Int(0)"];
  28 [shape=box label="Operator =="];
  29 [shape=box label="Exit when branch condition"];
  30 [shape=box label="Enter block"];
  31 [shape=box label="Jump: ^test_1 Unit"];
  32 [shape=box label="Stub[DEAD]"];
  33 [shape=box label="Exit block[DEAD]"];
  34 [shape=box label="Exit when branch result[DEAD]"];
  35 [shape=box label="Enter when branch condition else"];
  36 [shape=box label="Exit when branch condition"];
  37 [shape=box label="Enter block"];
  38 [shape=box label="Const: Int(5)"];
  39 [shape=box label="Exit block"];
  40 [shape=box label="Exit when branch result"];
  41 [shape=box label="Exit when"];
  42 [shape=box label="Variable declaration: lval y: R|kotlin/Int|"];
  43 [shape=box label="Exit block"];
  44 [shape=box label="Exit function test_1"];

  0 -> {1};
  1 -> {2};
  2 -> {3};
  3 -> {4};
  4 -> {5};
  5 -> {6};
  6 -> {7};
  7 -> {8 12};
  8 -> {9};
  9 -> {10};
  10 -> {11};
  11 -> {41};
  12 -> {13};
  13 -> {14};
  14 -> {15};
  15 -> {16};
  16 -> {17};
  17 -> {18};
  18 -> {19 23};
  19 -> {20};
  20 -> {21};
  21 -> {22};
  22 -> {41};
  23 -> {24};
  24 -> {25};
  25 -> {26};
  26 -> {27};
  27 -> {28};
  28 -> {29};
  29 -> {30 35};
  30 -> {31};
  31 -> {44};
  31 -> {32} [style=dotted];
  32 -> {33} [style=dotted];
  33 -> {34} [style=dotted];
  34 -> {41} [style=dotted];
  35 -> {36};
  36 -> {37};
  37 -> {38};
  38 -> {39};
  39 -> {40};
  40 -> {41};
  41 -> {42};
  42 -> {43};
  43 -> {44};
}

subgraph test_2 {
  45 [shape=box label="Enter function test_2"];
  46 [shape=box label="Enter block"];
  47 [shape=box label="Enter when"];
  48 [shape=box label="Enter when branch condition "];
  49 [shape=box label="Enter &&"];
  50 [shape=box label="Access variable R|<local>/x|"];
  51 [shape=box label="Type operator: x is A"];
  52 [shape=box label="Access variable R|<local>/x|"];
  53 [shape=box label="Type operator: x is B"];
  54 [shape=box label="Exit &&"];
  55 [shape=box label="Exit when branch condition"];
  56 [shape=box label="Enter block"];
  57 [shape=box label="Access variable R|<local>/x|"];
  58 [shape=box label="Type operator: x is A"];
  59 [shape=box label="Exit block"];
  60 [shape=box label="Exit when branch result"];
  61 [shape=box label="Enter when branch condition else"];
  62 [shape=box label="Exit when branch condition"];
  63 [shape=box label="Enter block"];
  64 [shape=box label="Exit block"];
  65 [shape=box label="Exit when branch result"];
  66 [shape=box label="Exit when"];
  67 [shape=box label="Exit block"];
  68 [shape=box label="Exit function test_2"];

  45 -> {46};
  46 -> {47};
  47 -> {48};
  48 -> {49};
  49 -> {50};
  50 -> {51};
  51 -> {54 52};
  52 -> {53};
  53 -> {54};
  54 -> {55};
  55 -> {56 61};
  56 -> {57};
  57 -> {58};
  58 -> {59};
  59 -> {60};
  60 -> {66};
  61 -> {62};
  62 -> {63};
  63 -> {64};
  64 -> {65};
  65 -> {66};
  66 -> {67};
  67 -> {68};
}

}
