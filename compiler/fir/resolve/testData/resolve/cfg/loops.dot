digraph loops_kt {
graph [splines=ortho, nodesep=3]

subgraph cluster_testWhile {
  0 [shape=box label="Enter function testWhile" style="filled"];
  1 [shape=box label="Enter block"];
  2 [shape=box label="Enter while loop"];
  3 [shape=box label="Enter loop condition"];
  4 [shape=box label="Access variable R|<local>/b|"];
  5 [shape=box label="Exit loop condition"];
  6 [shape=box label="Enter loop block"];
  7 [shape=box label="Enter block"];
  8 [shape=box label="Access variable R|<local>/x|"];
  9 [shape=box label="Type operator: x is String"];
  10 [shape=box label="Variable declaration: lval y: R|kotlin/Boolean|"];
  11 [shape=box label="Exit block"];
  12 [shape=box label="Exit loop block"];
  13 [shape=box label="Exit whileloop"];
  14 [shape=box label="Access variable R|<local>/x|"];
  15 [shape=box label="Type operator: x is String"];
  16 [shape=box label="Exit block"];
  17 [shape=box label="Exit function testWhile" style="filled"];

  0 -> {1};
  1 -> {2};
  2 -> {3};
  3 -> {4};
  4 -> {5};
  5 -> {13 6};
  6 -> {7};
  7 -> {8};
  8 -> {9};
  9 -> {10};
  10 -> {11};
  11 -> {12};
  12 -> {3};
  13 -> {14};
  14 -> {15};
  15 -> {16};
  16 -> {17};
}

subgraph cluster_testDoWhile {
  18 [shape=box label="Enter function testDoWhile" style="filled"];
  19 [shape=box label="Enter block"];
  20 [shape=box label="Enter do-while loop"];
  21 [shape=box label="Enter loop block"];
  22 [shape=box label="Enter block"];
  23 [shape=box label="Access variable R|<local>/x|"];
  24 [shape=box label="Type operator: x is String"];
  25 [shape=box label="Variable declaration: lval y: R|kotlin/Boolean|"];
  26 [shape=box label="Exit block"];
  27 [shape=box label="Exit loop block"];
  28 [shape=box label="Enter loop condition"];
  29 [shape=box label="Access variable R|<local>/b|"];
  30 [shape=box label="Exit loop condition"];
  31 [shape=box label="Exit do-whileloop"];
  32 [shape=box label="Access variable R|<local>/x|"];
  33 [shape=box label="Type operator: x is String"];
  34 [shape=box label="Exit block"];
  35 [shape=box label="Exit function testDoWhile" style="filled"];

  18 -> {19};
  19 -> {20};
  20 -> {21};
  21 -> {22};
  22 -> {23};
  23 -> {24};
  24 -> {25};
  25 -> {26};
  26 -> {27};
  27 -> {28};
  28 -> {29};
  29 -> {30};
  30 -> {21 31};
  31 -> {32};
  32 -> {33};
  33 -> {34};
  34 -> {35};
}

subgraph cluster_testFor {
  36 [shape=box label="Enter function testFor" style="filled"];
  37 [shape=box label="Enter block"];
  38 [shape=box label="Const: Int(0)"];
  39 [shape=box label="Const: Int(5)"];
  40 [shape=box label="Function call: Int(0).R|kotlin/Int.rangeTo|(Int(5))"];
  41 [shape=box label="Variable declaration: lval <range>: R|kotlin/ranges/IntRange|"];
  42 [shape=box label="Access variable R|<local>/<range>|"];
  43 [shape=box label="Function call: R|<local>/<range>|.R|kotlin/ranges/IntProgression.iterator|()"];
  44 [shape=box label="Variable declaration: lval <iterator>: R|kotlin/collections/IntIterator|"];
  45 [shape=box label="Enter while loop"];
  46 [shape=box label="Enter loop condition"];
  47 [shape=box label="Access variable R|<local>/<iterator>|"];
  48 [shape=box label="Function call: R|<local>/<iterator>|.R|FakeOverride<kotlin/collections/Iterator.hasNext: R|kotlin/Boolean|>|()"];
  49 [shape=box label="Exit loop condition"];
  50 [shape=box label="Enter loop block"];
  51 [shape=box label="Enter block"];
  52 [shape=box label="Access variable R|<local>/<iterator>|"];
  53 [shape=box label="Function call: R|<local>/<iterator>|.R|kotlin/collections/IntIterator.next|()"];
  54 [shape=box label="Variable declaration: lval i: R|kotlin/Int|"];
  55 [shape=box label="Access variable R|<local>/x|"];
  56 [shape=box label="Type operator: x is String"];
  57 [shape=box label="Variable declaration: lval y: R|kotlin/Boolean|"];
  58 [shape=box label="Exit block"];
  59 [shape=box label="Exit loop block"];
  60 [shape=box label="Exit whileloop"];
  61 [shape=box label="Access variable R|<local>/x|"];
  62 [shape=box label="Type operator: x is String"];
  63 [shape=box label="Exit block"];
  64 [shape=box label="Exit function testFor" style="filled"];

  36 -> {37};
  37 -> {38};
  38 -> {39};
  39 -> {40};
  40 -> {41};
  41 -> {42};
  42 -> {43};
  43 -> {44};
  44 -> {45};
  45 -> {46};
  46 -> {47};
  47 -> {48};
  48 -> {49};
  49 -> {60 50};
  50 -> {51};
  51 -> {52};
  52 -> {53};
  53 -> {54};
  54 -> {55};
  55 -> {56};
  56 -> {57};
  57 -> {58};
  58 -> {59};
  59 -> {46};
  60 -> {61};
  61 -> {62};
  62 -> {63};
  63 -> {64};
}

subgraph cluster_testWhileTrue {
  65 [shape=box label="Enter function testWhileTrue" style="filled"];
  66 [shape=box label="Enter block"];
  67 [shape=box label="Enter while loop"];
  68 [shape=box label="Enter loop condition"];
  69 [shape=box label="Const: Boolean(true)"];
  70 [shape=box label="Exit loop condition"];
  71 [shape=box label="Enter loop block"];
  72 [shape=box label="Enter block"];
  73 [shape=box label="Const: Int(1)"];
  74 [shape=box label="Exit block"];
  75 [shape=box label="Exit loop block"];
  76 [shape=box label="Stub[DEAD]"];
  77 [shape=box label="Exit whileloop[DEAD]"];
  78 [shape=box label="Const: Int(1)[DEAD]"];
  79 [shape=box label="Exit block[DEAD]"];
  80 [shape=box label="Exit function testWhileTrue[DEAD]" style="filled"];

  65 -> {66};
  66 -> {67};
  67 -> {68};
  68 -> {69};
  69 -> {70};
  70 -> {71};
  70 -> {76} [style=dotted];
  71 -> {72};
  72 -> {73};
  73 -> {74};
  74 -> {75};
  75 -> {68};
  76 -> {77} [style=dotted];
  77 -> {78} [style=dotted];
  78 -> {79} [style=dotted];
  79 -> {80} [style=dotted];
}

subgraph cluster_testWhileTrueWithBreak {
  81 [shape=box label="Enter function testWhileTrueWithBreak" style="filled"];
  82 [shape=box label="Enter block"];
  83 [shape=box label="Enter while loop"];
  84 [shape=box label="Enter loop condition"];
  85 [shape=box label="Const: Boolean(true)"];
  86 [shape=box label="Exit loop condition"];
  87 [shape=box label="Enter loop block"];
  88 [shape=box label="Enter block"];
  89 [shape=box label="Enter when"];
  90 [shape=box label="Enter when branch condition "];
  91 [shape=box label="Access variable R|<local>/b|"];
  92 [shape=box label="Exit when branch condition"];
  93 [shape=box label="Enter block"];
  94 [shape=box label="Jump: break@@@[Boolean(true)] "];
  95 [shape=box label="Stub[DEAD]"];
  96 [shape=box label="Exit block[DEAD]"];
  97 [shape=box label="Exit when branch result[DEAD]"];
  98 [shape=box label="Enter when branch condition else"];
  99 [shape=box label="Exit when branch condition"];
  100 [shape=box label="Enter block"];
  101 [shape=box label="Exit block"];
  102 [shape=box label="Exit when branch result"];
  103 [shape=box label="Exit when"];
  104 [shape=box label="Exit block"];
  105 [shape=box label="Exit loop block"];
  106 [shape=box label="Stub[DEAD]"];
  107 [shape=box label="Exit whileloop"];
  108 [shape=box label="Const: Int(1)"];
  109 [shape=box label="Exit block"];
  110 [shape=box label="Exit function testWhileTrueWithBreak" style="filled"];

  81 -> {82};
  82 -> {83};
  83 -> {84};
  84 -> {85};
  85 -> {86};
  86 -> {87};
  86 -> {106} [style=dotted];
  87 -> {88};
  88 -> {89};
  89 -> {90};
  90 -> {91};
  91 -> {92};
  92 -> {93 98};
  93 -> {94};
  94 -> {107};
  94 -> {95} [style=dotted];
  95 -> {96} [style=dotted];
  96 -> {97} [style=dotted];
  97 -> {103} [style=dotted];
  98 -> {99};
  99 -> {100};
  100 -> {101};
  101 -> {102};
  102 -> {103};
  103 -> {104};
  104 -> {105};
  105 -> {84};
  106 -> {107} [style=dotted];
  107 -> {108};
  108 -> {109};
  109 -> {110};
}

subgraph cluster_testWhileFalse {
  111 [shape=box label="Enter function testWhileFalse" style="filled"];
  112 [shape=box label="Enter block"];
  113 [shape=box label="Enter while loop"];
  114 [shape=box label="Enter loop condition"];
  115 [shape=box label="Const: Boolean(false)"];
  116 [shape=box label="Exit loop condition"];
  117 [shape=box label="Stub[DEAD]"];
  118 [shape=box label="Enter loop block[DEAD]"];
  119 [shape=box label="Enter block[DEAD]"];
  120 [shape=box label="Const: Int(1)[DEAD]"];
  121 [shape=box label="Exit block[DEAD]"];
  122 [shape=box label="Exit loop block[DEAD]"];
  123 [shape=box label="Exit whileloop"];
  124 [shape=box label="Const: Int(1)"];
  125 [shape=box label="Exit block"];
  126 [shape=box label="Exit function testWhileFalse" style="filled"];

  111 -> {112};
  112 -> {113};
  113 -> {114};
  114 -> {115};
  115 -> {116};
  116 -> {123};
  116 -> {117} [style=dotted];
  117 -> {118} [style=dotted];
  118 -> {119} [style=dotted];
  119 -> {120} [style=dotted];
  120 -> {121} [style=dotted];
  121 -> {122} [style=dotted];
  122 -> {114} [style=dotted];
  123 -> {124};
  124 -> {125};
  125 -> {126};
}

subgraph cluster_testDoWhileTrue {
  127 [shape=box label="Enter function testDoWhileTrue" style="filled"];
  128 [shape=box label="Enter block"];
  129 [shape=box label="Enter do-while loop"];
  130 [shape=box label="Enter loop block"];
  131 [shape=box label="Enter block"];
  132 [shape=box label="Const: Int(1)"];
  133 [shape=box label="Exit block"];
  134 [shape=box label="Exit loop block"];
  135 [shape=box label="Enter loop condition"];
  136 [shape=box label="Const: Boolean(true)"];
  137 [shape=box label="Exit loop condition"];
  138 [shape=box label="Stub[DEAD]"];
  139 [shape=box label="Exit do-whileloop[DEAD]"];
  140 [shape=box label="Const: Int(1)[DEAD]"];
  141 [shape=box label="Exit block[DEAD]"];
  142 [shape=box label="Exit function testDoWhileTrue[DEAD]" style="filled"];

  127 -> {128};
  128 -> {129};
  129 -> {130};
  130 -> {131};
  131 -> {132};
  132 -> {133};
  133 -> {134};
  134 -> {135};
  135 -> {136};
  136 -> {137};
  137 -> {130};
  137 -> {138} [style=dotted];
  138 -> {139} [style=dotted];
  139 -> {140} [style=dotted];
  140 -> {141} [style=dotted];
  141 -> {142} [style=dotted];
}

subgraph cluster_testDoWhileTrueWithBreak {
  143 [shape=box label="Enter function testDoWhileTrueWithBreak" style="filled"];
  144 [shape=box label="Enter block"];
  145 [shape=box label="Enter do-while loop"];
  146 [shape=box label="Enter loop block"];
  147 [shape=box label="Enter block"];
  148 [shape=box label="Enter when"];
  149 [shape=box label="Enter when branch condition "];
  150 [shape=box label="Access variable R|<local>/b|"];
  151 [shape=box label="Exit when branch condition"];
  152 [shape=box label="Enter block"];
  153 [shape=box label="Jump: break@@@[Boolean(true)] "];
  154 [shape=box label="Stub[DEAD]"];
  155 [shape=box label="Exit block[DEAD]"];
  156 [shape=box label="Exit when branch result[DEAD]"];
  157 [shape=box label="Enter when branch condition else"];
  158 [shape=box label="Exit when branch condition"];
  159 [shape=box label="Enter block"];
  160 [shape=box label="Exit block"];
  161 [shape=box label="Exit when branch result"];
  162 [shape=box label="Exit when"];
  163 [shape=box label="Exit block"];
  164 [shape=box label="Exit loop block"];
  165 [shape=box label="Enter loop condition"];
  166 [shape=box label="Const: Boolean(true)"];
  167 [shape=box label="Exit loop condition"];
  168 [shape=box label="Stub[DEAD]"];
  169 [shape=box label="Exit do-whileloop"];
  170 [shape=box label="Const: Int(1)"];
  171 [shape=box label="Exit block"];
  172 [shape=box label="Exit function testDoWhileTrueWithBreak" style="filled"];

  143 -> {144};
  144 -> {145};
  145 -> {146};
  146 -> {147};
  147 -> {148};
  148 -> {149};
  149 -> {150};
  150 -> {151};
  151 -> {152 157};
  152 -> {153};
  153 -> {169};
  153 -> {154} [style=dotted];
  154 -> {155} [style=dotted];
  155 -> {156} [style=dotted];
  156 -> {162} [style=dotted];
  157 -> {158};
  158 -> {159};
  159 -> {160};
  160 -> {161};
  161 -> {162};
  162 -> {163};
  163 -> {164};
  164 -> {165};
  165 -> {166};
  166 -> {167};
  167 -> {146};
  167 -> {168} [style=dotted];
  168 -> {169} [style=dotted];
  169 -> {170};
  170 -> {171};
  171 -> {172};
}

subgraph cluster_testDoWhileFalse {
  173 [shape=box label="Enter function testDoWhileFalse" style="filled"];
  174 [shape=box label="Enter block"];
  175 [shape=box label="Enter do-while loop"];
  176 [shape=box label="Enter loop block"];
  177 [shape=box label="Enter block"];
  178 [shape=box label="Const: Int(1)"];
  179 [shape=box label="Exit block"];
  180 [shape=box label="Exit loop block"];
  181 [shape=box label="Enter loop condition"];
  182 [shape=box label="Const: Boolean(false)"];
  183 [shape=box label="Exit loop condition"];
  184 [shape=box label="Exit do-whileloop"];
  185 [shape=box label="Const: Int(1)"];
  186 [shape=box label="Exit block"];
  187 [shape=box label="Exit function testDoWhileFalse" style="filled"];
  188 [shape=box label="Stub[DEAD]"];

  173 -> {174};
  174 -> {175};
  175 -> {176};
  176 -> {177};
  177 -> {178};
  178 -> {179};
  179 -> {180};
  180 -> {181};
  181 -> {182};
  182 -> {183};
  183 -> {184};
  183 -> {188} [style=dotted];
  184 -> {185};
  185 -> {186};
  186 -> {187};
  188 -> {176} [style=dotted];
}

}
